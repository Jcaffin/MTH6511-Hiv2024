using SparseArrays, Test

Arows = [1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 16, 17, 18, 19]
Acols = [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3]
m = 16
n = 3
nnzj = 48
x = [0.006852021948854134, 6015.657308691264, 339.6075381984802]

############### Valeurs au cours de l'itération ###############
Avals = [5.07735032573268e6, 89.29528426171947, -1378.7459859850633, 4.1751417732600123e6, 72.49776119473421, -1105.2036384958662, 3.450099008616567e6, 59.15842889084547, -890.5658705345726, 2.864437148739502e6, 48.50919560635596, -721.2290171048659, 2.389018250779459e6, 39.96412166277534, -586.9287992683563, 2.001247067159131e6, 33.07366018678093, -479.8750319212341, 1.6835075226463682e6, 27.490999198345058, -394.1216856131045, 1.4219940143352547e6, 22.947153125693706, -325.10541381323736, 1.205832781192512e6, 19.232420171271908, -269.30544434181076, 1.0264176543442762e6, 16.18249956135471, -223.99144792260546, 876905.1637107522, 13.668040028232559, -187.03556637875278, 751828.761416459, 11.586729266622687, -156.77150432269482, 646802.5651726935, 9.857275504980475, -131.88833904546755, 558292.7313226843, 8.41480557948554, -111.3500820642957, 483440.17957770714, 7.207328962463452, -94.33444307534828, 419922.5014560758, 6.19300799111351, -80.18598649729626, 0.06197241629467964, 0.06197241629467964, 0.06197241629467964]
b = [-10.115873942013422, 1.8369300446247507, 9.845867239393556, 2.8137857237816206, 0.39450944603777316, 7.41117074567228, 4.569503766037087, 0.4658026356355549, -1.3926833789173543, -3.036296258355833, -3.573428809600955, -4.54717500539482, -4.905373138451978, -5.434048908756722, -5.542721424433239, -5.31819679476348, 0.0, 0.0, 0.0]
D = [0.003833233541708435, 0.003833233541708435, 0.003833233541708435]
λ = 7.3468396926392965e-6

Jvals = jac_coord_residual(nlp, x)
Fx = residual(nlp,x)

@test Avals[1:nnzj] == Jvals
@test b[1:m]        == -Fx
@test Avals[nnzj+1] == sqrt(D[1]+λ)

A = sparse(Arows, Acols, Avals, m+n, n)
QR = qr(A)
d  = QR\(b)

nlp = mgh10()
xᵖ  = x + d

Fxᵖ = residual(nlp, xᵖ)
fxᵖ = norm(Fxᵖ)^2 / 2

Jx = jac_residual(nlp, x)
Fx = residual(nlp, x)
D_d  = Diagonal(D)
D_test = view(Avals, nnzj+1:nnzj+n)
dDd = d' * D_d *d
dDd2 = sum((d[i]^2) * D_test[i] for i = 1 : n)
#dDd = [991.1471776219531]

qxᵖ  = (norm((Jx * d) + Fx)^2 + (dDd)) / 2

fx = 221.97177136934377
# @test fx - fxᵖ > 0
@test fx - qxᵖ > 0






D = view(Avals, nnzj+1:nnzj+n)